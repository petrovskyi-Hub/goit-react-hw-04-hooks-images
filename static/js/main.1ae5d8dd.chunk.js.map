{"version":3,"sources":["components/Error/Error.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/ApiService.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/Error/sadcat.jpg","components/Error/Error.js","App.js","index.js"],"names":["module","exports","Searchbar","onHandleSubmit","useState","query","setQuery","className","onSubmit","e","preventDefault","trim","toast","info","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","data-source","onClick","ImageGallery","images","map","index","apiService","page","a","axios","get","data","hits","Button","onLoadMore","Loader","s","overlay","color","height","width","timeout","modalRoot","document","querySelector","Modal","onCloseModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","Error","texterror","role","wrapper","img","errorImage","text","App","setImages","setPage","error","setError","showLoadMoreBtn","setShowLoadMoreBtn","isLoading","setIsLoading","showModal","setShowModal","setLargeImageURL","ApiService","request","length","prevImages","onScroll","fetchImages","scrollTo","top","documentElement","scrollHeight","behavior","newQuery","dataset","source","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ae5d8dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error_wrapper__2TEfP\",\"text\":\"Error_text__2Vupz\",\"img\":\"Error_img__3uSvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Loader_overlay__5c8x7\"};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Searchbar({ onHandleSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (query.trim() === '') {\r\n      return toast.info('ðŸ˜± Please enter a value for search images!');\r\n    }\r\n    onHandleSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={({ target }) => setQuery(target.value)}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags, onOpenModal }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ webformatURL, largeImageURL, tags }, index) => (\r\n        <ImageGalleryItem\r\n          key={index}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\n\r\nconst apiService = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=18963132-a5d8582da162d4c0f5ee62384&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return data.hits;\r\n};\r\n\r\nexport default apiService;\r\n","import PropTypes from 'prop-types';\r\n// import s from './Button.module.css';\r\n\r\nfunction Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import RactLoader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={s.overlay}>\r\n      <RactLoader\r\n        type=\"Grid\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ onCloseModal, largeImageURL }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onCloseModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/sadcat.3fdf6288.jpg\";","import PropTypes from 'prop-types';\r\nimport errorImage from './sadcat.jpg';\r\nimport s from './Error.module.css';\r\n\r\nfunction Error({ texterror }) {\r\n  return (\r\n    <div role=\"alert\" className={s.wrapper}>\r\n      <img className={s.img} src={errorImage} width=\"280\" alt=\"sadcat\" />\r\n      <p text={texterror} className={s.text}>\r\n        {texterror}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nError.propTypes = {\r\n  texterror: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport ApiService from './services/ApiService';\r\nimport Button from './components/Button/Button';\r\nimport Loader from './components/Loader/Loader';\r\nimport Modal from './components/Modal/Modal';\r\nimport Error from './components/Error/Error';\r\n\r\nexport default function App() {\r\n  const [query, setQuery] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n  const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!query) return;\r\n\r\n    const fetchImages = async () => {\r\n      try {\r\n        const request = await ApiService(query, page);\r\n        if (request.length === 0) {\r\n          setError(`No results were found for ${query}!`);\r\n        }\r\n\r\n        if (request) {\r\n          setImages(prevImages => [...prevImages, ...request]);\r\n        }\r\n\r\n        if (request.length >= 12) {\r\n          setShowLoadMoreBtn(true);\r\n        } else {\r\n          setShowLoadMoreBtn(false);\r\n        }\r\n      } catch (error) {\r\n        setError('Something went wrong. Try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n        if (page > 1) {\r\n          onScroll();\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, [page, query]);\r\n\r\n  const searchImgs = newQuery => {\r\n    if (query === newQuery) return;\r\n\r\n    setQuery(newQuery);\r\n    setImages([]);\r\n    setPage(1);\r\n    setError(null);\r\n    setIsLoading(true);\r\n  };\r\n\r\n  const onLoadMore = () => {\r\n    setIsLoading(true);\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const onOpenModal = e => {\r\n    setLargeImageURL(e.target.dataset.source);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onScroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar onHandleSubmit={searchImgs} />\r\n\r\n      {error && <Error texterror={error} />}\r\n\r\n      {images.length > 0 && (\r\n        <ImageGallery images={images} onOpenModal={onOpenModal} />\r\n      )}\r\n\r\n      {isLoading && <Loader />}\r\n\r\n      {showLoadMoreBtn && <Button onLoadMore={onLoadMore} />}\r\n\r\n      {showModal && (\r\n        <Modal\r\n          onCloseModal={() => setShowModal(false)}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      )}\r\n\r\n      <ToastContainer autoClose={4000} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}